sessionInfo()
install.packages("tidyverse")
library(ggplot2)
install.packages("data.table")
library(data.table)
source('http://bioconductor.org/biocLite.R')
biocLite('phyloseq')
l
library(phyloseq)
install.packages("igraph")
install.packages("bipartite")
library(bipartite)
help(bipartite)
library(bookdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('./images/',s1.per_base_quality.png)
knitr::include_graphics('./images/s1.per_base_quality.png')
* Phred quality score distribution over all reads in each base.
The dataaset had a good quality profile with no quailities dropping below phred score 30. Detailed
![sample1dadadadddddddddddddddddddddddddddd](./images/s1.per_base_quality.png)
library(data.table)
library(DESeq2)
library(gtools)
library(ggpubr)
?merge
car
MAT
matrix(data, nrow = rows, ncol = cols)
cars
all_data = data.table()
?cbind
240+1074*0.45
1314*0.45
800*65
47000*1.15
50000*12
47000*12
47000*1.05
47000*1.06
47000*1.07
47000*1.08
120+45+236-80+200
521/6
127359306/17091590308*100
113.42/2
113.42/1000
ls()
getwd()
127359306/9171534
63679653*2
127359306/(6.9982+7.2645)
127359306/13.88
.9982+7.2645
(6.9982+7.2645)
library(data.table)
curr_dir = getwd()
library(data.table)
this.dir <- dirname(parent.frame(2)$ofile)
library(data.table)
library(rstudioapi)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path ))
source('~/Workspace/Coverage-based-functional-analyisis-in-a-MAG-centric-view/group_norm_cov.R', echo=TRUE)
# set median as coverage threshold
cov_cutoff = median(sapply(ctg_cov_norm[,3:7], median))
# identify normal groups
NORM_ctg_cov_wg = ctg_cov_norm
NORM_ctg_cov_wg$group = apply(ctg_cov_norm[,3:7], 1, identify_normal_group, cov_cutoff = cov_cutoff)
source('~/Workspace/Coverage-based-functional-analyisis-in-a-MAG-centric-view/group_norm_cov.R', echo=TRUE)
NORM_group_num = data.table(table(NORM_ctg_cov_wg$group))
colnames(NORM_group_num) = c('Group','Number')
total_ctg_num = sum(NORM_group_num$Number)
NORM_group_num$Percent = NORM_group_num$Number/total_ctg_num*100
NORM_group_num$Group = factor(NORM_group_num$Group, levels=normal_groups)
# save output with group column
write.csv(NORM_ctg_cov_wg, 'NORM_group.csv',quote = F,row.names = F)
NORM_group_num
